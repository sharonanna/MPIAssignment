// Generated by CoffeeScript 2.6.1
/*

Adapted from Fred Callaway's experiment.coffee file

*/
var checkWindowSize, initializeExperiment, loadJson;

// coffeelint: disable=max_line_length, indentation

// Enforce a minimum window size
checkWindowSize = function(width, height, display) {
  var maxHeight, win_width;
  console.log('cws');
  win_width = $(window).width();
  maxHeight = $(window).height();
  if ($(window).width() < width || $(window).height() < height) {
    display.hide();
    return $('#window_error').show();
  } else {
    $('#window_error').hide();
    return display.show();
  }
};

$(window).resize(function() {
  return checkWindowSize(800, 600, $('#jspsych-target'));
});

$(window).resize();

loadJson = function(file) {
  var result;
  result = $.ajax({
    dataType: 'json',
    url: file,
    async: false
  });
  return result.responseJSON;
};

$(window).on('load', function() {
  var trials;
  trials = loadJson("static/json/trials.json");
  return initializeExperiment(trials);
});

initializeExperiment = function(trials) {
  var experiment_timeline, i, main, welcome;
  console.log('INITIALIZE EXPERIMENT');
  console.log(trials);
  //  ============================== #
  //  ========= EXPERIMENT ========= #
  //  ============================== #
  welcome = {
    type: 'text',
    text: `<h1>Mouselab-MDP Demo</h1>

This is an experiment to test understand human metacognitive learning.
<p>
Press <b>space</b> to continue.
`
  };
  i = 0;
  main = {
    type: 'mouselab-mdp',
    leftMessage: function() {
      return `Round: ${++i}/${trials.length}`;
    },
    timeline: trials
  };
  // welcome
  experiment_timeline = [main];
  // ================================================ #
  // ========= START AND END THE EXPERIMENT ========= #
  // ================================================ #
  return jsPsych.init({
    display_element: $('#jspsych-target'),
    timeline: experiment_timeline,
    // show_progress_bar: true
    on_finish: function() {
      return jsPsych.data.displayData();
    },
    on_data_update: function(data) {
      return console.log('data', data);
    }
  });
};
